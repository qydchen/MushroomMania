{"version":3,"sources":["webpack:///webpack/bootstrap 55fda4bc43cc7aec6781","webpack:///./coord.js","webpack:///./main.js","webpack:///./snake-view.js","webpack:///./board.js","webpack:///./snake.js","webpack:///./apple.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACLD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,0BAA0B;AAC7C;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,UAAU;AAC/B,uBAAuB,UAAU;;AAEjC;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC/EA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC7CA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 55fda4bc43cc7aec6781","class Coord {\n  constructor(x,y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  plus(coordinate) {\n    return new Coord(this.x + coordinate.x, this.y + coordinate.y);\n  }\n\n  equals(coordinate) {\n    return (this.x === coordinate.x) && (this.y === coordinate.y);\n  }\n\n  isOpposite(coordinate) {\n    return (this.x === (-1 * coordinate.x)) && (this.y === (-1 * coordinate.y));\n  }\n}\n\nmodule.exports = Coord;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./coord.js\n// module id = 0\n// module chunks = 0","const View = require('./snake-view');\n\n$l(function () {\n  const rootEl = $l(\".snake-game\");\n  new View(rootEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./main.js\n// module id = 1\n// module chunks = 0","const Board = require('./board');\n\nclass View {\n  constructor($el) {\n    this.$el = $el;\n\n    this.board = new Board(20);\n    this.setupGrid();\n\n    this.intervalId = window.setInterval(\n      this.step.bind(this),\n      View.STEP_MILLISECOND\n    );\n\n    this.score = $l('.score');\n\n    $l(window).on(\"keydown\", this.handleKeyEvent.bind(this));\n\n  }\n\n  step() {\n    if (this.board.snake.segments.length > 0) {\n      this.board.snake.move();\n      this.render();\n    } else {\n      window.alert(\"You lose!\");\n      window.clearInterval(this.intervalId);\n    }\n  }\n\n  setupGrid() {\n    let html = \"\";\n\n    for (let i = 0; i < this.board.dimension; i++) {\n      html += \"<ul>\";\n      for (let j = 0; j < this.board.dimension; j++) {\n        html += \"<li></li>\";\n      }\n      html += \"</ul>\";\n    }\n    this.$el.html(html);\n    this.$li = this.$el.find(\"li\");\n  }\n\n  handleKeyEvent(event) {\n    if (View.KEYS[event.keyCode]) {\n      this.board.snake.turn(View.KEYS[event.keyCode]);\n    }\n  }\n\n  updateClasses(coords, className) {\n    let els = $l(`.${className}`);\n    els.removeClass(`${className}`);\n\n    coords.forEach( coord => {\n      const flatCoord = (coord.x * this.board.dimension) + coord.y;\n      this.$li.eq(flatCoord).addClass(className);\n    })\n  }\n\n  render() {\n    let score = Math.floor(this.board.snake.segments.length/3);\n    this.score.html(score);\n\n    this.updateClasses(this.board.snake.segments, \"snake\");\n    this.updateClasses([this.board.apple.position], \"apple\");\n  }\n\n}\n\nView.KEYS = {\n  38: \"N\",\n  39: \"E\",\n  40: \"S\",\n  37: \"W\"\n}\n\nView.STEP_MILLISECOND = 100;\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake-view.js\n// module id = 2\n// module chunks = 0","const Snake = require('./snake');\nconst Apple = require('./apple');\n\nclass Board {\n  constructor(dimension) {\n    this.dimension = dimension;\n    this.snake = new Snake(this);\n    this.apple = new Apple(this);\n  }\n\n  static blankGrid(dimension) {\n    const grid = [];\n\n    for (let i = 0; i < dimension; i++) {\n      const row = [];\n      for (let j = 0; j < dimension; j++) {\n        row.push(Board.BLANK_SYMBOL);\n      }\n      grid.push(row);\n    }\n\n    return grid;\n  }\n\n  render() {\n    const grid = Board.blankGrid(this.dimension);\n\n    this.snake.segments.forEach( segment => {\n      grid[segment.x][segment.y] = Snake.SYMBOL;\n    });\n\n    grid[this.apple.position.x][this.apple.position.y] = Apple.SYMBOL;\n\n    const rowStrs = [];\n    grid.map( row => row.join(\"\") ).join(\"\\n\");\n  }\n\n  validPosition(coord) {\n    return (coord.x >= 0) && (coord.x < this.dimension) &&\n      (coord.y >= 0) && (coord.y < this.dimension);\n  }\n}\n\nBoard.BLANK_SYMBOL = \".\";\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./board.js\n// module id = 3\n// module chunks = 0","const Coord = require('./coord');\n\n\nclass Snake {\n  constructor(board) {\n    this.direction = 'N';\n    this.turning = false;\n    this.board = board;\n    const center = new Coord(Math.floor(board.dimension/2), Math.floor(board.dimension/2));\n    this.segments = [center];\n\n    this.growTurns = 0;\n  }\n\n  eatApple() {\n    if (this.head().equals(this.board.apple.position)) {\n      this.growTurns += 3;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOccupying(array) {\n    let result =  false;\n    this.segments.forEach( segment => {\n      if (segment.x === array[0] && segment.y === array[1]) {\n        result = true;\n        return result;\n      }\n    });\n    return result;\n  }\n\n  head() {\n    return this.segments.slice(-1)[0];\n  }\n\n  isValid() {\n    const head = this.head();\n\n    if (!this.board.validPosition(this.head())) {\n      return false;\n    }\n\n    for (let i = 0; i < this.segments.length - 1; i++) {\n      if (this.segments[i].equals(head)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  turn(direction) {\n    // prevent opposite turning\n    //  {x: 1, y: 0}\n    //  {x: -1, y: 0}\n    console.log(Snake.DIRECTION[this.direction]);\n    if (Snake.DIRECTION[this.direction].isOpposite(Snake.DIRECTION[direction]) ||\n      this.turning) {\n        return;\n      } else {\n        this.turning = true;\n        this.direction = direction;\n      }\n    }\n\n\n  move() {\n    //move in the same direction\n    this.segments.push(this.head().plus(Snake.DIRECTION[this.direction]));\n    // allow turning\n    this.turning = false;\n\n    if (this.eatApple()) {\n      this.board.apple.replace();\n    }\n\n    if (this.growTurns > 0) {\n      this.growTurns -= 1;\n    } else {\n      this.segments.shift();\n    }\n\n    if (!this.isValid()) {\n      this.segments = [];\n    }\n  }\n}\n\nSnake.DIRECTION = {\n  \"N\": new Coord(-1, 0),\n  \"E\": new Coord(0, 1),\n  \"S\": new Coord(1, 0),\n  \"W\": new Coord(0, -1)\n};\n\nSnake.SYMBOL = \"S\";\nSnake.GROW_TURNS = 3;\n\nmodule.exports = Snake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./snake.js\n// module id = 4\n// module chunks = 0","const Coord = require(\"./coord\");\n\nclass Apple {\n  constructor(board) {\n    this.board = board;\n    this.replace();\n  }\n\n  replace() {\n    let x = Math.floor(Math.random() * this.board.dimension);\n    let y = Math.floor(Math.random() * this.board.dimension);\n\n    while (this.board.snake.isOccupying([x, y])) {\n      x = Math.floor(Math.random() * this.board.dimension);\n      y = Math.floor(Math.random() * this.board.dimension);\n    }\n\n    this.position = new Coord(x, y);\n  }\n\n}\n\nmodule.exports = Apple;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./apple.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}